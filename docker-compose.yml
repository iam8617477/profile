services:
  web:
    build: .
    command: >
      sh -c "
        echo 'Waiting 15 seconds before starting...';
        sleep 15;
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn app.wsgi:application --workers 2 --bind 0.0.0.0:8000"
    expose:
      - '8000'
    networks:
      - shared_network
      - web_to_db
    depends_on:
      - db
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - REMOTE_HOST=${REMOTE_HOST}
      - REMOTE_HOST_NAME=${REMOTE_HOST_NAME}
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - web_to_db

  fill_nginx_conf:
    image: python:3.9
    volumes:
      - ./nginx.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./generate_nginx_conf.py:/generate_nginx_conf.py
      - nginx_conf:/etc/nginx/conf.d/
    environment:
      - DOMAIN_NAME=${REMOTE_HOST_NAME}
      - SUB_DOMAIN_NAME=${REMOTE_SUB_HOST_NAME}
    command: >
      sh -c "pip install jinja2 && python /generate_nginx_conf.py --template /etc/nginx/conf.d/default.conf.template --output /etc/nginx/conf.d/default.conf"

  nginx:
    image: nginx:latest
    volumes:
      - nginx_conf:/etc/nginx/conf.d
      - letsencrypt:/etc/letsencrypt:ro
      - static_volume:/app/staticfiles
      - certbot-challenges:/usr/share/nginx/html/.well-known/acme-challenge
    ports:
      - '80:80'
      - '443:443'
    networks:
      - public_network
      - shared_network
    depends_on:
      - fill_nginx_conf
      - web

  certbot:
    image: certbot/certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - ./certbot-logs:/var/log/letsencrypt
      - certbot-challenges:/usr/share/nginx/html/.well-known/acme-challenge
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h; done;'"
    networks:
      - public_network

networks:
  public_network:
    driver: bridge
  web_to_db:
    driver: bridge
    internal: true
  shared_network:
    name: project_shared_network
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  nginx_conf:
  letsencrypt:
  certbot-challenges:
  media_volume:
